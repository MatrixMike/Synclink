.TH "SYNCLINK" 1 "2015-02-03" "GNU command"


.SH NAME

.P
\fBsynclink\fR \- program to keep two directories synchronised using hard links.

.SH SYNOPSIS

.P
\fBsynclink\fR [option] source_dir destination_dir.
Both directories must be input by the user.

.SH DESCRIPTION

.P
\fBsynclink\fR causes the destination directory to be an exact hard linked
copy of the source directory. Files which are copies rather than links will be deleted and replaced by a linked version. Directories required in the destination are created as necessary. Symlinks are linked as are files regardless of being broken or not. All file system objects in the destination but not in the source are deleted.
Some errors are fatal but some file and dir handling errors are not. These errors are sent to \fIstderr\fR. It may be usefull to redirect such errors to a file. Eg: 2> errors.lst.
File system objects other than directories, regular files and symlinks are ignored.

.SH OPTIONS

.TP
 \fB\-h\fR
print help information and exit.
.TP
 \fB\-D\fR
when selected, prevents the workfiles in /tmp/ from being deleted on completion. These files are named as 'username+program_name+sequence_number'.
.TP
 \fB\-v\fR
Verbose mode. There is only one level of verbosity so there is nothing to gain by multiple use. When selected the progress report is sent to \fIstdout\fR.

.SH BUGS/FEATURES

.P
All file system objects considered are recorded as absolute pathnames followed by a path end flag of this form '   !', without the ' of course. Consequently anyone who wins some set of files having names beginning with 3 spaces is likely to experience aberrant behaviour.

.SH AUTHOR

.P
Robert L Parker rlp1938@gmail.com

.\" man code generated by txt2tags 2.6 (http://txt2tags.org)
.\" cmdline: txt2tags -t man synclink.t2t
